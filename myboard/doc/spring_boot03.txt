1. build.gradle 파일에 다음의 의존성을 추가

    compile 'org.webjars:jquery:3.3.1-1'
    compile 'org.webjars:bootstrap:4.1.0'

webjar 에 대한 의존성에 대한 정보는 다음 사이트에서 검색

https://www.webjars.org/

2. 클래스 패스에 있는 webjar의 내용을 외부에서 접근할 수 있어야 한다.

webjar 파일을 압출을 해제하면 META-INF/resources/webjars 폴더에 static리소스가 있다.
bootstrap 4.1.0 의 경우에는 다음과 같은 폴더가 있다.

META-INF
    resources
        webjars
            bootstrap
                4.1.0
                    css (각종css파일)
                        bootstrap.css
                    js  (각종 js파일)

위와 같은 내용을 아래의 URL로 접근하도록 설정한다.
http://localhost:8080/webjars/bootstrap/4.1.0/css/bootstrap.css

WebMvcConfigurer 를 구현한 java config 클래스에서 다음과 같은 메소드를 오버라이딩한다.

	@Override
	public void addResourceHandlers(ResourceHandlerRegistry registry) {
		System.out.println("========================================================");
		// "/webjars/**"와 같은 경로로 접근할 수 있는 리소스가 설정되어 있지 않다면
		if(!registry.hasMappingForPattern("/webjars/**")){
			System.out.println("has not mapping for pattern!!");
			// META-INF/resources/webjars/ 디렉토리 이하의 내용을 url path : /webjars/** 로 접근하겠다.
			registry.addResourceHandler("/webjars/**").addResourceLocations("classpath:META-INF/resources/webjars/");
			//registry.addResourceHandler("/**").addResourceLocations("classpath:META-INF/");
		}
		System.out.println("========================================================");
	}


3. html문서에서는 다음과 같이 접근을 한다.

        <link rel="stylesheet" href="/webjars/bootstrap/4.1.0/css/bootstrap.min.css"/>
        <script src="/webjars/jquery/3.3.1-1/jquery.min.js"></script>
        <script src="/webjars/bootstrap/4.1.0/js/bootstrap.min.js"></script>

------------------------------------------------

단방향 맵핑 ( Many쪽의 join컬럼을 적어준다. )
User 엔티티 객체 ------------------>  UserRole 엔티티 객체
               1               *

@OneToMany
@JoinColumn(name = "user_id")
List<UserRole> userRoles

insert
insert
update


양방향 맵핑
User 엔티티 객체 <------------------>  UserRole 엔티티 객체
               1               *

@OneToMany(mappedBy = "user")       @ManyToOne
                                    @JoinColumn(name = "user_id")
List<UserRole> userRoles            User user;


양방향으로 참조할 수 있도록 헬퍼 메소드를 만들어줘야한다.

insert
insert


user테이블                           user_role테이블
id(pk)                              id(pk)
                                    user_id(fk)

































