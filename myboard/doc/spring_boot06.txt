
application.yml 파일에 다음과 같이 기본으로 사용할 profile을 설정할 수 있다.

spring:
  profiles:
    active: local

package examples.boot.simpleboard.service;

public interface MyService {
    public String getName();
}


ckage examples.boot.simpleboard.service.impl;

import examples.boot.simpleboard.service.MyService;
import org.springframework.context.annotation.Profile;
import org.springframework.stereotype.Service;

@Service
@Profile("heroku")
public class KimServiceImpl implements MyService {
    @Override
    public String getName() {
        return "kim";
    }
}


package examples.boot.simpleboard.service.impl;

import examples.boot.simpleboard.service.MyService;
import org.springframework.context.annotation.Profile;
import org.springframework.stereotype.Service;

@Service
@Profile("local")
public class MyServiceImpl implements MyService {
    @Override
    public String getName() {
        return "urstory";
    }
}


@Autowired
MyService myService;


Profile설정에 따라 다른 객체를 주입할 수 있도록 한다.



java -jar 스프링부트애플리케이션.jar --spring.profiles.active=heroku

실행시에 프로그램 아규먼트를 줌으로써 원하는 profile로 실행할 수 있다.


=====================================

application.yml 파일에 profile별 설정을 할 수 있다.


my:
  address: 192.168.1.100  <----- 공통설정
---
spring:
  profiles: local
my:
  address: 127.0.0.1       <---- local
---
spring:
  profiles: heroku
my:
  address: 192.168.1.120   <---- heroku

아래와 같이 @Value애노테이션을 이용하여 설정을 읽어왔다.

@Controller
@RequestMapping("/boards")
public class BoardController {

    @Value("${my.address}")
    private String address;
