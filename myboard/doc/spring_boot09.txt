JPQL 패치조인

lazy로 설정되어 있을 경우에도 한번의 query로 결과를 가지고 올 수 있다.

2개의 엔티티간에 가능하다.

좀 더 자세한 내용은 아래를 참고

http://wonwoo.ml/index.php/post/797


------------------------------------------------
아래의 getAllUsers()메소드를 호출하면 페치조인이 실행된다.
다음과 같은 sql이 실행된다.

Hibernate: select user0_.id as id1_5_0_, roles1_.id as id1_6_1_, user0_.email as email2_5_0_, user0_.name as name3_5_0_, user0_.password as password4_5_0_, user0_.regdate as regdate5_5_0_, roles1_.role_name as role_nam2_6_1_, roles1_.user_id as user_id3_6_1_, roles1_.user_id as user_id3_6_0__, roles1_.id as id1_6_0__ from user user0_ inner join user_role roles1_ on user0_.id=roles1_.user_id


package examples.boot.simpleboard.repository;

import examples.boot.simpleboard.base.JpaQueryDslPredicateRepository;
import examples.boot.simpleboard.domain.User;
import org.springframework.data.jpa.repository.Query;

import java.util.List;

// @Repository를 붙이지 않아도 Repository로 등록된다.
public interface UserRepository
        extends JpaQueryDslPredicateRepository<User, Long> {

    public User findUserByEmail(String email);

    @Query("SELECT u FROM User u join fetch u.roles") // 패치조인
    public List<User> getAllUsers();
}