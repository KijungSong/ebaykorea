메시지 컨버터

- spring 을 이용해서 메시지 컨버터를 등록하는 방법
http://www.baeldung.com/spring-httpmessageconverter-rest

- spring boot에서의 메시지 컨버터 설정

java config파일 중 WebMvcConfigurer를 구현하는 클래스에서 다음의 메소드를 오버라이딩한다.

public void configureMessageConverters(List<HttpMessageConverter<?>> converters)

converters 에 메시지를 컨버터를 등록하면 됩니다.


1. hibernate 5를 사용하고 엔티티를 반환하면 Exception이 발생한다. 기존의 컨버터가 변환을 못한다.

-- 아래와 같이 컨버터를 생성한다 --
2. 변환하기 위해 jackson이 제공하는 하이버네이트 모듈을 추가한다.
3. 이렇게 했을 경우 LocalDateTime이 jsr310형식으로 출력되지 않는다.
4. jackson이 제공하는 jsr310모듈을 추가한다.

	// https://stackoverflow.com/questions/28862483/spring-and-jackson-how-to-disable-fail-on-empty-beans-through-responsebody
	// https://github.com/FasterXML/jackson-datatype-hibernate/issues/87
	// https://stackoverflow.com/questions/33727017/configure-jackson-to-omit-lazy-loading-attributes-in-spring-boot
	@Override
	public void configureMessageConverters(List<HttpMessageConverter<?>> converters) {

		// http://jsonobject.tistory.com/235 iso8601 형식으로 날짜 정보 출력하기
		ObjectMapper mapper = Jackson2ObjectMapperBuilder.json().featuresToDisable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS).modules(new JavaTimeModule()).build();
		mapper.registerModule(new Hibernate5Module());

		mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);
		MappingJackson2HttpMessageConverter converter =
				new MappingJackson2HttpMessageConverter(mapper);
		converter.setPrettyPrint(true);

		converters.add(converter);
	}
---------------

참고로 spring boot로 spring mvc 웹 프로그래밍을 하려면 다음의 라이브러리 의존성을 추가하면 됩니다.

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

spring boot는 의존성을 추가하면 자동으로 설정이 된다. 웹 프로그래밍과 관련된 내용들이 자동으로 설정된다.
기본적인 메시지 컨버터들도 자동으로 등록된다.

확인을 위해서, 스프리이 관리하는 메시지 컨버터들을 가지는 객체를 주입을 받았다.

    @Autowired
    HttpMessageConverters httpMessageConverters;


위와 같이 주입받은 객체를 이용하여 기본으로 등록된 컨버터 정보를 출력한다.

        List<HttpMessageConverter<?>> converters =
                httpMessageConverters.getConverters();
        for(HttpMessageConverter converter : converters){
            System.out.println(converter.getClass().getName());
        }

아래와 같은 내용이 출력된다.

org.springframework.http.converter.ByteArrayHttpMessageConverter
org.springframework.http.converter.StringHttpMessageConverter
org.springframework.http.converter.StringHttpMessageConverter
org.springframework.http.converter.ResourceHttpMessageConverter
org.springframework.http.converter.ResourceRegionHttpMessageConverter
org.springframework.http.converter.xml.SourceHttpMessageConverter
org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter
org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter



-------------------------------

Rest API(Web API) 를 구현하는 RestController의 메소드는

ResponseEntity<DTO타입> 을 반환한다.

반환을 할 때 알맞은 응답코드를 설정하도록 한다.

--------------------------------ㅂ



